@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Logging

@inject NavigationManager _navigationManager
@inject AppStateService _appState
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <FmModal>
            <Trigger>
                <SfTooltip Position="Syncfusion.Blazor.Popups.Position.BottomCenter"
                           Content="My Profile">
                    <div class="d-flex justify-content-between align-items-center"
                         style="cursor: pointer;">
                        @if (!string.IsNullOrEmpty(_appState.Identity.User.Avatar.Name))
                        {
                            var avatarUrl = $"https://adoptingmsastorage.blob.core.windows.net/accountavatars/{_appState.Identity.User.Avatar.Name}";

                            var style = $"background-image: url({avatarUrl})";

                            <div class="e-avatar e-avatar-circle" style="@style"></div>
                        }
                        else
                        {
                            const string avatarUrl = "_content/Clients.Web.Components/images/avatar.jpg";

                            const string style = $"background-image: url({avatarUrl})";

                            <div class="e-avatar e-avatar-circle" style="@style"></div>
                        }

                        <SfIcon IconCss="fa-solid fa-solid fa-chevron-down"
                                class="fm-sidebar__icon ml-1"/>
                    </div>
                </SfTooltip>
            </Trigger>

            <Header>
                <FmTypography Text="Your Profile"
                              Type="@Typography.LevelTwo"/>
            </Header>

            <Content>
                <FmTypography Text="@_appState.Identity.User.UserName"/>

                <FmSpacer/>

                <FmTypography Text="@_appState.Identity.User.FirstName"/>
                
                <FmLink Text="Update Profile" 
                        Route="@($"{Routes.IdentityUpsert}?user_id={_appState.Identity.User.Id}&upsert_type=update")" />
            </Content>

            <Footer>
                <SfButton IconCss="fa-solid fa-arrow-right-from-bracket"
                          IconPosition="IconPosition.Right"
                          CssClass="e-block"
                          OnClick="BeginSignOut">
                    Logout
                </SfButton>
            </Footer>
        </FmModal>

    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isVisibleProfileModal;

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        _navigationManager.NavigateTo("authentication/logout");
    }
}