@page "/coupons"

@inject IConfiguration Configuration
@inject HttpClient HttpClient

<div class="d-flex justify-content-between align-items-center">
    <h3>All Active Subscriptions</h3>

    <a class="btn btn-primary" href="/coupons/upsert?coupon_id=0&upsert_type=create">
        Create
    </a>
</div>

@if (!_isFetching)
{
    <table class="table table-striped">
        <thead>
        <tr>
            <td>Id</td>
            <td>Name</td>
            <td>AdminEmail</td>
            <td>Discount</td>
            <td>Description</td>
            <td>CreatedDate</td>
            <td>Actions</td>
        </tr>
        </thead>
        <tbody>
        @if (_couponsCollection is not null)
        {
            @foreach (var coupon in _couponsCollection)
            {
                <tr>
                    <td>@coupon.Id</td>
                    <td>@coupon.Name</td>
                    <td>@coupon.AdminEmail</td>
                    <td>@coupon.Discount</td>
                    <td>@coupon.Description</td>
                    <td>@coupon.CreatedDate.ToString("f")</td>
                    <td>
                        <div class="btn-group">
                            <a class="btn btn-success"
                               href="@($"/coupons/upsert?coupon_id={coupon.Id}&upsert_type=edit")">
                                Edit
                            </a>
                            <a class="btn btn-danger"
                               href="@($"/coupons/upsert?coupon_id={coupon.Id}&upsert_type=delete")">
                                Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td>----</td>
                <td>----</td>
                <td>----</td>
                <td>----</td>
                <td>----</td>
                <td>----</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div class="spinner-border"></div>
}

@code {
    private List<CouponDto>? _couponsCollection;
    private bool _isFetching;

    /// <summary>
    /// On page load configure the HTTP client and page data
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        var baseUrl = new Uri(Configuration.GetValue<string>("GatewayUrl"));

        HttpClient.BaseAddress = baseUrl;

        await GetAllCouponsAsync();
    }

    /// <summary>
    /// Fetch all subscriptions from
    /// </summary>
    /// <returns></returns>
    private async Task GetAllCouponsAsync()
    {
        _isFetching = true;

        var response = await HttpClient
            .GetAsync("/gateway/coupons/all?filter=all");

        if (response.IsSuccessStatusCode)
            _couponsCollection = await response.Content
                .ReadFromJsonAsync<List<CouponDto>>();
    
        _isFetching = false;
    }
}
